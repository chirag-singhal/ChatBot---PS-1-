'''
    admin.py file are use to display your models in django admin pannel also you can customise your admin panel
    using admin.py file. Generated by python manage.py startapp queries using Django 2.1.7.

    For more information, see 
    https://docs.djangoproject.com/en/1.11/ref/contrib/admin/
'''
from django.contrib import admin
from .models import Query
from .models import Unanswered_Query
from import_export.admin import ImportExportModelAdmin #Importing import_export module
from import_export import resources
from django.forms import ValidationError

'''
    To integrate django-import-export with our Query model, we will create a QueryResource class in admin.py 
    that will describe how this resource can be imported or exported:
'''
class QueryResource(resources.ModelResource):
    class Meta:
        '''
            By default QueryResource introspects model fields and creates Field-attributes with an appropriate Widget for each field.
            To affect which model fields will be included in an import-export resource, use the fields option to whitelist fields.

            attributes - 
            model : Which model to use
            skip_unchanged : skip import of unchnaged records
            report_skipped : Report what columns are skipped
            exclide : What fields to exclude
            import_id_fields : What fields to include in import
            fields : What fields to include in import export resource.
        '''
        model = Query
        skip_unchanged = True
        report_skipped = False
        exclude = ('id')
        import_id_fields = ('intent', 'response',)
        fields = ('intent', 'response',)
    def before_import(self, dataset, using_transactions, dry_run, **kwargs):
        for row in dataset:
            print(row)
            if row[0] is None and row[1] is None:
                raise ValidationError('Row cannot be empty\n')
            elif row[1] is None:
                raise ValidationError(' Response cannot be null for intent = %s\n' % row[0])
            elif row[0] is None:
                raise ValidationError(' Intent cannot be null for response = %s\n' % row[1])
        return

class QueryAdmin(ImportExportModelAdmin):
    '''
        Admin integration is achieved by subclassing ImportExportModelAdmin or one 
        of the available mixins. It registers our QueryResource in Admin panel.
    '''
    resource_class = QueryResource

# Register your models here.
admin.site.register(Query, QueryAdmin)
admin.site.register(Unanswered_Query, QueryAdmin)
